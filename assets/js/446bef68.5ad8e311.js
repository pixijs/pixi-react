"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["790"],{9141:function(e,n,i){i.r(n),i.d(n,{default:()=>d,frontMatter:()=>s,metadata:()=>r,assets:()=>c,toc:()=>l,contentTitle:()=>o});var r=JSON.parse('{"id":"typescript","title":"TypeScript","description":"ReactPixi gives you full type support.","source":"@site/versioned_docs/version-7.x/typescript.mdx","sourceDirName":".","slug":"/typescript","permalink":"/7.x/typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixi-react/tree/main/docs/versioned_docs/version-7.x/typescript.mdx","tags":[],"version":"7.x","frontMatter":{"title":"TypeScript"},"sidebar":"guides","previous":{"title":"Stage","permalink":"/7.x/stage/"}}'),t=i("4246"),p=i("980");let s={title:"TypeScript"},o="TypeScript Support",c={},l=[{value:"PointLike types",id:"pointlike-types",level:2},{value:"Source types",id:"source-types",level:2},{value:"Custom Components",id:"custom-components",level:2},{value:"PixiRef",id:"pixiref",level:2},{value:"Type component props",id:"type-component-props",level:2}];function a(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,p.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"typescript-support",children:"TypeScript Support"})}),"\n",(0,t.jsx)(n.p,{children:"ReactPixi gives you full type support."}),"\n",(0,t.jsx)("img",{src:"/pixi-react/v7/img/typescript-support.png",alt:"Type Support",width:"653"}),"\n",(0,t.jsx)(n.h2,{id:"pointlike-types",children:"PointLike types"}),"\n",(0,t.jsxs)(n.p,{children:["The props ",(0,t.jsx)(n.code,{children:"position"}),", ",(0,t.jsx)(n.code,{children:"scale"}),", ",(0,t.jsx)(n.code,{children:"pivot"}),", ",(0,t.jsx)(n.code,{children:"anchor"})," and ",(0,t.jsx)(n.code,{children:"skew"})," are PointLike types."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type PointLike =\n  | { x: number; y: number }\n  | Point\n  | ObservablePoint\n  | number\n  | [number]\n  | [number, number];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { Sprite } from '@pixi/react';\nimport { Point } from 'pixi.js';\n\n<Sprite anchor={{ x: 0.5, y: 0.5 }} />\n<Sprite anchor={new Point(0.5, 0.5)} />\n<Sprite anchor={0.5} />\n<Sprite anchor={[0.5]} />\n<Sprite anchor={[0.5, 0.5]} />\n"})}),"\n",(0,t.jsx)(n.h2,{id:"source-types",children:"Source types"}),"\n",(0,t.jsx)(n.p,{children:"Apply source directly to a component.\nSource types are available for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<Sprite>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<Text>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<NineSlicePlane>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<TilingSprite>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<SimpleRope>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<SimpleMesh>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<AnimatedSprite>"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type Source = {\n  image?: ImageSource;\n  video?: VideoSource;\n  source?:\n    | number\n    | ImageSource\n    | VideoSource\n    | HTMLCanvasElement\n    | Texture;\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<Sprite image=\"./my-image.png\" />\n<Sprite video={document.querySelector('#video')} />\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-components",children:"Custom Components"}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { PixiComponent } from '@pixi/react';\nimport { Graphics } from 'pixi.js';\n\ninterface RectangleProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  color: number;\n}\n\nconst Rectangle = PixiComponent<RectangleProps, Graphics>('Rectangle', {\n  create: () => new Graphics(),\n  applyProps: (ins, _, props) => {\n    ins.x = props.x;\n    ins.beginFill(props.color);\n    ins.drawRect(props.x, props.y, props.width, props.height);\n    ins.endFill();\n  },\n});\n\nconst App = () => (\n  <Stage>\n    <Rectangle x={100} y={100} width={100} height={100} color={0xff0000} />\n  </Stage>\n);\n"})}),"\n",(0,t.jsx)("img",{src:"/pixi-react/v7/img/typescript-custom-components.png",alt:"Type Custom Components",width:"502"}),"\n",(0,t.jsx)(n.h2,{id:"pixiref",children:"PixiRef"}),"\n",(0,t.jsx)(n.p,{children:"Get the PixiJS instance type for a ReactPixi component:"}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { Container, PixiRef } from '@pixi/react';\n\ntype IContainer = PixiRef<typeof Container>; // Pixi Container\n\nconst App = () => {\n  const containerRef = React.useRef<IContainer>(null);\n  return <Container ref={containerRef} />;\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"type-component-props",children:"Type component props"}),"\n",(0,t.jsx)(n.p,{children:"Extract a component prop type as follow:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useCallback, ComponentProps } from 'react';\nimport { Graphics } from '@pixi/react';\n\ntype Draw = ComponentProps<typeof Graphics>['draw'];\n\nconst App = () => {\n  const draw = useCallback<Draw>((g) => {\n    g; // PIXI.Graphics\n\n    g.clear();\n    g.beginFill(props.color);\n    g.drawRect(0, 0, 100, 100);\n    g.endFill();\n  });\n\n  return <Graphics draw={draw} />;\n};\n"})})]})}function d(e={}){let{wrapper:n}={...(0,p.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);