"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["715"],{6507:function(e,n,r){r.r(n),r.d(n,{default:()=>p,frontMatter:()=>c,metadata:()=>t,assets:()=>d,toc:()=>s,contentTitle:()=>a});var t=JSON.parse('{"id":"render/Render","title":"Render","description":"You can either render your PIXI React components in the DOM or through a custom render call.","source":"@site/versioned_docs/version-7.x/render/Render.mdx","sourceDirName":"render","slug":"/render/","permalink":"/7.x/render/","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixi-react/tree/main/docs/versioned_docs/version-7.x/render/Render.mdx","tags":[],"version":"7.x","frontMatter":{},"sidebar":"guides","previous":{"title":"React Spring","permalink":"/7.x/react-spring"},"next":{"title":"Stage","permalink":"/7.x/stage/"}}'),o=r("4246"),i=r("980");let c={},a="Render",d={},s=[{value:"In ReactDOM",id:"in-reactdom",level:2},{value:"Custom render call",id:"custom-render-call",level:2}];function l(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"render",children:"Render"})}),"\n",(0,o.jsx)(n.p,{children:"You can either render your PIXI React components in the DOM or through a custom render call."}),"\n",(0,o.jsx)(n.h2,{id:"in-reactdom",children:"In ReactDOM"}),"\n",(0,o.jsx)(n.p,{children:"This is the most common scenario"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Stage, Sprite } from '@pixi/react';\nimport { createRoot } from 'react-dom/client';\n\nconst App = () => (\n  <div>\n    {/* somewhere in your tree */}\n    <Stage>\n      <Sprite image=\"./bunny.png\" x={100} y={100} />\n    </Stage>\n  </div>\n);\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<App />);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"custom-render-call",children:"Custom render call"}),"\n",(0,o.jsxs)(n.p,{children:["You can also render a Pixi React component tree directly using the ",(0,o.jsx)(n.code,{children:"render"})," call and bypass ReactDOM entirely:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { createRoot, Text } from '@pixi/react';\nimport { Application } from 'pixi.js';\n\n// Setup PIXI app\nconst app = new Application({\n  width: 800,\n  height: 600,\n  backgroundColor: 0x10bb99,\n  view: document.getElementById('container'),\n});\n\n// Use the custom renderer to render a valid PIXI object into a PIXI container.\nconst root = createRoot(app.stage);\nroot.render(<Text text=\"Hello World\" x={200} y={200} />);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you're removing/unmounting the container (or PIXI application), it's advisable to tear it down correctly.\nSimply call ",(0,o.jsx)(n.code,{children:"root.unmount()"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { render, unmountComponentAtNode, Text } from '@pixi/react';\nimport { Application } from 'pixi.js';\n\nconst app = new Application({...});\n\nconst root = createRoot(app.stage);\nroot.render(<Text text=\"Hello World\" />);\n\n// clean up on unmount\nroot.unmount();\n"})})]})}function p(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);