"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["869"],{9012:function(e,n,t){t.r(n),t.d(n,{default:()=>l,frontMatter:()=>s,metadata:()=>r,assets:()=>a,toc:()=>c,contentTitle:()=>d});var r=JSON.parse('{"id":"context-bridge","title":"Context Bridge","description":"By design React don\'t let you propagate parent contexts in child components from a custom renderers. For example when you\'re using a state manager like Redux.","source":"@site/versioned_docs/version-7.x/context-bridge.mdx","sourceDirName":".","slug":"/context-bridge","permalink":"/7.x/context-bridge","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixi-react/tree/main/docs/versioned_docs/version-7.x/context-bridge.mdx","tags":[],"version":"7.x","frontMatter":{},"sidebar":"guides","previous":{"title":"TilingSprite","permalink":"/7.x/components/TilingSprite"},"next":{"title":"Custom Components","permalink":"/7.x/custom-component"}}'),o=t("4246"),i=t("980");let s={},d="Context Bridge",a={},c=[];function x(e){let n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"context-bridge",children:"Context Bridge"})}),"\n",(0,o.jsxs)(n.p,{children:["By design React don't let you propagate parent contexts in child components from a custom renderers. For example when you're using a state manager like Redux.\nThis means that you cannot directly access a parent context within a ",(0,o.jsx)(n.code,{children:"<Stage>"})," or its children."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"\u26A1\uFE0F Solution: use a context bridge:"})}),"\n",(0,o.jsx)(n.p,{children:"The workaround is to use a Context Bridge where we feed a context to a child component that is rendered in a custom renderer/reconciler."}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"// the context bridge:\nconst ContextBridge = ({ children, Context, render }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        render(<Context.Provider value={value}>{children}</Context.Provider>)\n      }\n    </Context.Consumer>\n  );\n};\n\n// your Stage:\nimport { Stage as PixiStage } from '@pixi/react';\nimport { ReactReduxContext } from 'react-redux';\n\nexport const Stage = ({ children, ...props }) => {\n  return (\n    <ContextBridge\n      Context={ReactReduxContext}\n      render={(children) => <PixiStage {...props}>{children}</PixiStage>}\n    >\n      {children}\n    </ContextBridge>\n  );\n};\n\n// your App\nconst App = (\n  <Stage>\n    <SomeComponentUsingRedux />\n  </Stage>\n);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Also see ",(0,o.jsx)(n.a,{href:"https://standard.ai/blog/introducing-standard-view-and-react-three-fiber-context-bridge/",children:"Context Bridge Concept"})]})]})}function l(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}}}]);