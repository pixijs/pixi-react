"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["968"],{8513:function(e,t,n){n.r(t),n.d(t,{default:()=>p,frontMatter:()=>r,metadata:()=>o,assets:()=>l,toc:()=>d,contentTitle:()=>a});var o=JSON.parse('{"id":"extend","title":"extend","description":"One of the most important concepts to understand with v8 is extend. Normally @pixi/react would have to import all pf Pixi.js to be able to provide the full library as JSX components. Instead, we use an internal catalogue of components populated by the extend API. This allows you to define exactly which parts of Pixi.js you want to import, keeping your bundle sizes small.","source":"@site/docs/extend.mdx","sourceDirName":".","slug":"/extend","permalink":"/extend","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixi-react/tree/main/docs/docs/extend.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"useTick","permalink":"/hooks/useTick"},"next":{"title":"Typescript","permalink":"/typescript"}}'),i=n("4246"),s=n("980");let r={sidebar_position:4},a=void 0,l={},d=[];function c(e){let t={code:"code",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["One of the most important concepts to understand with v8 is ",(0,i.jsx)(t.code,{children:"extend"}),". Normally ",(0,i.jsx)(t.code,{children:"@pixi/react"})," would have to import all pf Pixi.js to be able to provide the full library as JSX components. Instead, we use an internal catalogue of components populated by the ",(0,i.jsx)(t.code,{children:"extend"})," API. This allows you to define exactly which parts of Pixi.js you want to import, keeping your bundle sizes small."]}),"\n",(0,i.jsxs)(t.p,{children:["To allow ",(0,i.jsx)(t.code,{children:"@pixi/react"})," to use a Pixi.js component, pass it to the ",(0,i.jsx)(t.code,{children:"extend"})," API:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"import {\n    Application,\n    extend,\n} from '@pixi/react';\nimport { Container } from 'pixi.js';\n\nextend({ Container });\n\nconst MyComponent = () => (\n    <pixiContainer />\n);\n"})})]})}function p(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);