"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["27"],{2850:function(e,t,n){n.r(t),n.d(t,{default:()=>c,frontMatter:()=>d,metadata:()=>s,assets:()=>l,toc:()=>m,contentTitle:()=>p});var s=JSON.parse('{"id":"components/BitmapText","title":"BitmapText","description":"Props","source":"@site/versioned_docs/version-7.x/components/BitmapText.mdx","sourceDirName":"components","slug":"/components/BitmapText","permalink":"/pixi-react/7.x/components/BitmapText","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixi-react/tree/main/docs/versioned_docs/version-7.x/components/BitmapText.mdx","tags":[],"version":"7.x","frontMatter":{},"sidebar":"guides","previous":{"title":"AnimatedSprite","permalink":"/pixi-react/7.x/components/AnimatedSprite"},"next":{"title":"Container","permalink":"/pixi-react/7.x/components/Container"}}'),o=n("4246"),a=n("980"),r=n("482"),i=n("3414");let d={},p="BitmapText",l={},m=[{value:"Props",id:"props",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}];function x(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"bitmaptext",children:"BitmapText"})}),"\n",(0,o.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://pixijs.download/v7.x/docs/PIXI.BitmapText.html",children:"https://pixijs.download/v7.x/docs/PIXI.BitmapText.html"})}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(r.k,{version:"v7",height:350,files:{"App.js":"import { BitmapText, Stage, Text } from '@pixi/react';\nimport ExampleAssetLoader from './ExampleAssetLoader';\n\nconst position = {\n    anchor: 0.5,\n    x: 250,\n    y: 150,\n};\nexport default function App() {\n    return (\n        <Stage width={500} height={300} options={{ backgroundColor: 0xffffff }}>\n            <ExampleAssetLoader\n                name='desyrel'\n                url='https://pixijs.io/pixi-react/font/desyrel.xml'\n                loader={<Text {...position} text='\u231B Loading font...' style={{ fontFamily: 'Arial', fontSize: 15 }} />}\n            >\n                <BitmapText {...position} text='Hello World!' style={{ fontName: 'Desyrel', fontSize: 50 }} />\n            </ExampleAssetLoader>\n        </Stage>\n    );\n}\n","ExampleAssetLoader.js":i.Z}}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.p,{children:"Make sure to load the bitmap font data before mounting."}),"\n",(0,o.jsxs)(t.p,{children:["See ",(0,o.jsx)(t.a,{href:"https://pixijs.io/examples/#/demos/text-demo.js",children:"https://pixijs.io/examples/#/demos/text-demo.js"})]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import { render } from 'react-dom'\nimport { Stage, BitmapText } from '@pixi/react'\nimport { Loader } from 'pixi.js'\n\nLoader.shared\n  .add('desyrel', './assets/desyrel.xml')\n  .load(onAssetsLoaded)\n\n// If using v7 or later, use the following code:\n// import { Assets } from 'pixi.js'\n//\n// Assets\n//  .load('./assets/desyrel.xml')\n//  .then(onAssetsLoaded)\n\nconst App = () => (\n  <Stage>\n    <BitmapText text=\"Hello World\" style={{ fontName: 'Desyrel', fontSize: 35 }}>\n  </Stage>\n)\n\nfunction onAssetsLoaded() {\n  render(<App />, document.getElementById('root'))\n}\n"})})]})}function c(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}},3414:function(e,t,n){n.d(t,{Z:function(){return s}});let s="import React, { useEffect, useState } from 'react';\nimport { Assets } from 'pixi.js';\n\n// Helper Component to ensure assets are loaded for docusaurus live examples\nconst ExampleAssetLoader = ({ name, url, loader, children }) =>\n{\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() =>\n    {\n        const loadAsset = async () =>\n        {\n            Assets.add(name, url);\n\n            await Assets.load(name);\n            setIsLoaded(true);\n        };\n\n        loadAsset().catch(console.error);\n    }, [name, url]);\n\n    return isLoaded ? children : loader;\n};\n\nexport default ExampleAssetLoader;\n"}}]);